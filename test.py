from ids_lib.visualization.graph import PrettyGraph
import json
import numpy as np



json_var = """{
    "general_table": {
        "detect_n": [
            " 0.00",
            " 4.52",
            "98.06",
            "98.06",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71"
        ],
        "detect_t": [
            " 0.00",
            "96.77",
            "97.42",
            "98.06",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71"
        ],
        "fa_n": [
            64,
            20259,
            314008,
            893911,
            1483942,
            1875375,
            2145550,
            2415303,
            2675990,
            2935564,
            3140293,
            3329929,
            3499119,
            3653889,
            3784289
        ],
        "fa_t": [
            3,
            251,
            1078,
            3316,
            11736,
            37251,
            84720,
            168221,
            273423,
            378259,
            474487,
            573708,
            672621,
            769718,
            858698
        ],
        "fad_n": [
            6,
            85,
            755,
            1578,
            1997,
            2112,
            2304,
            2658,
            3059,
            3365,
            3611,
            3817,
            3980,
            4147,
            4294
        ],
        "fad_t": [
            3,
            1,
            49,
            56,
            76,
            205,
            347,
            632,
            911,
            1145,
            1453,
            1738,
            1989,
            2172,
            2482
        ],
        "nvalues": [
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16
        ]
    },
    "mmth": 0.028,
    "probability_table": {
        "detect_n": [
            " 0.00",
            " 0.00",
            " 1.29",
            " 4.52",
            "14.84",
            "22.58",
            "34.19",
            "42.58",
            "81.29",
            "96.77",
            "97.42",
            "97.42",
            "98.06",
            "98.06",
            "98.71"
        ],
        "detect_n_only": [
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00"
        ],
        "detect_t": [
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.65",
            " 0.00",
            " 0.00",
            " 7.10",
            "96.13",
            "96.77",
            "96.77",
            "96.77",
            "96.77",
            "96.77",
            "96.77",
            "96.77"
        ],
        "detect_t_only": [
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00",
            " 0.00"
        ],
        "fa_n": [
            64,
            139,
            2706,
            41078,
            383976,
            893871,
            1290154,
            1526417,
            1752006,
            1824157,
            1934770,
            2031369,
            2124318,
            2259417,
            2420698
        ],
        "fa_t": [
            3,
            0,
            518,
            269,
            664,
            2172,
            3541,
            23547,
            47588,
            65443,
            90415,
            141005,
            182225,
            211817,
            246098
        ],
        "fad_n": [
            6,
            5,
            25,
            205,
            764,
            927,
            988,
            1059,
            1127,
            1081,
            1089,
            1075,
            1074,
            1076,
            1117
        ],
        "fad_t": [
            3,
            0,
            46,
            45,
            36,
            67,
            55,
            173,
            227,
            247,
            296,
            426,
            517,
            518,
            631
        ],
        "nvalues": [
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16
        ]
    },
    "scenario": "CVE-2012-2122",
    "stide_table": {
        "detect_n": [
            " 0.00",
            " 4.52",
            "98.06",
            "98.06",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71"
        ],
        "detect_n_only": [
            " 0.00",
            "100.00",
            "98.68",
            "95.39",
            "84.97",
            "77.12",
            "65.36",
            "56.86",
            "17.65",
            " 1.96",
            " 1.31",
            " 1.31",
            " 0.65",
            " 0.65",
            " 0.00"
        ],
        "detect_t": [
            " 0.00",
            "96.77",
            "97.42",
            "98.06",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71",
            "98.71"
        ],
        "detect_t_only": [
            " 0.00",
            "100.00",
            "100.00",
            "99.34",
            "100.00",
            "100.00",
            "92.81",
            " 2.61",
            " 1.96",
            " 1.96",
            " 1.96",
            " 1.96",
            " 1.96",
            " 1.96",
            " 1.96"
        ],
        "fa_n": [
            0,
            20200,
            313951,
            893761,
            1483751,
            1875358,
            2145378,
            2413409,
            2669564,
            2930970,
            3135320,
            3326233,
            3496273,
            3651072,
            3780838
        ],
        "fa_t": [
            0,
            251,
            560,
            3047,
            11344,
            35770,
            83575,
            164094,
            271279,
            377339,
            473909,
            572421,
            671949,
            769225,
            857843
        ],
        "fad_n": [
            0,
            82,
            750,
            1571,
            1982,
            2107,
            2296,
            2597,
            2939,
            3294,
            3535,
            3760,
            3932,
            4107,
            4233
        ],
        "fad_t": [
            0,
            1,
            3,
            11,
            43,
            141,
            308,
            546,
            850,
            1119,
            1434,
            1685,
            1922,
            2160,
            2400
        ],
        "nvalues": [
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16
        ]
    },
    "w": 500
}"""

parsed_json_var = json.loads(json_var)


general_table = parsed_json_var['general_table']
print(general_table)

ns = general_table['nvalues']
detects = general_table['detect_n']
fads    = general_table['fad_n']
detectts = general_table['detect_t']
fadts    = general_table['fad_t']

detects = ', '.join(detects)
detects = np.fromstring(detects, dtype = np.float, sep =', ' )

detectts = ', '.join(detectts)
detectts = np.fromstring(detectts, dtype = np.float, sep =', ' )

data1 = np.stack((ns, fads, detects), axis=-1)

data2 = np.stack((ns, fadts, detectts), axis=-1)

PrettyGraph('x', r'False Alarms absolute count', r'$Rate_{detection}$', [data1, data2])
